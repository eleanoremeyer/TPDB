(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS eval_foo_start))
(VAR nondef.0 nondef.1 nondef.2 v_.0 v_.01 v_.03 v_.05 v_10 v_12 v_13 v_n v_tx v_ty v_x v_y)
(RULES
  eval_foo_start(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb0_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_bb0_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb1_in(v_x, v_tx, v_y, v_ty, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_x + v_y >= 0
  eval_foo_bb0_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_x + v_y < 0
  eval_foo_bb1_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb2_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.0 <= v_n
  eval_foo_bb1_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.0 > v_n
  eval_foo_bb2_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb3_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.0 >= 2*v_.01 + v_.03 && v_.03 >= v_.05 + 1 && v_.0 >= v_.01 + 1
  eval_foo_bb2_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.0 < 2*v_.01 + v_.03
  eval_foo_bb2_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.03 < v_.05 + 1
  eval_foo_bb2_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_.0 < v_.01 + 1
  eval_foo_bb3_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_7(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_7(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_2(eval___VERIFIER_nondet_int_start(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y), eval_foo_8(v_.0, v_.01, v_.03, v_.05, nondef.0, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_8(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_2(eval___VERIFIER_nondet_int_start(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y), eval_foo_9(v_.0, v_.01, v_.03, v_.05, v_10, nondef.1, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_9(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb4_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_10 < 0
  eval_foo_9(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb4_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_10 > 0
  eval_foo_9(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb1_in(v_12, v_.0, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y)) :|: v_10 = 0
  eval_foo_bb4_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_10(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_10(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_2(eval___VERIFIER_nondet_int_start(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y), eval_foo_11(v_.0, v_.01, v_.03, v_.05, v_10, v_12, nondef.2, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_11(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_bb1_in(v_12, v_.0, v_13, v_.03, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
  eval_foo_.critedge_in(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y) -> Com_1(eval_foo_stop(v_.0, v_.01, v_.03, v_.05, v_10, v_12, v_13, v_n, v_tx, v_ty, v_x, v_y))
)
