(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS eval_speedFails4_start))
(VAR nondef.0 v_. v_.0 v_0 v_n v_x)
(RULES
  eval_speedFails4_start(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb0_in(v_., v_.0, v_0, v_n, v_x))
  eval_speedFails4_bb0_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb1_in(1, v_x, nondef.0, v_n, v_x)) :|: nondef.0 >= 1
  eval_speedFails4_bb0_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb1_in(-1, v_x, nondef.0, v_n, v_x)) :|: nondef.0 < 1
  eval_speedFails4_bb1_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb2_in(v_., v_.0, v_0, v_n, v_x)) :|: v_.0 <= v_n
  eval_speedFails4_bb1_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb3_in(v_., v_.0, v_0, v_n, v_x)) :|: v_.0 > v_n
  eval_speedFails4_bb2_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb1_in(v_., v_.0 + v_., v_0, v_n, v_x)) :|: v_0 >= 1
  eval_speedFails4_bb2_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_bb1_in(v_., v_.0 - v_., v_0, v_n, v_x)) :|: v_0 < 1
  eval_speedFails4_bb3_in(v_., v_.0, v_0, v_n, v_x) -> Com_1(eval_speedFails4_stop(v_., v_.0, v_0, v_n, v_x))
)
